<Window x:Class="WpfOverview.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfOverview"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800" x:Name="wMain">
    <StackPanel>
        <TabControl>
            <TabItem Header="Basic Controls:">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <StackPanel Grid.Column="0" Margin="10">
                        <TextBlock Text="Text Controls:"/>
                        <TextBlock Text="Text Block"></TextBlock>
                        <Label>
                            <ContentControl>
                                <TextBlock Text="Label"></TextBlock>
                            </ContentControl>
                        </Label>
                        <Label  Content="Username:"/>
                        <TextBox/>
                        <Label  Content="Password:"/>
                        <PasswordBox/>
                    </StackPanel>
                    <StackPanel Grid.Column="1" Margin="10">
                        <TextBlock Text="Button Controls:"/>
                        <Button Click="Button_Click">
                            <TextBlock Text="Click me!"></TextBlock>
                        </Button>
                        <ToggleButton Content="Toggle button" Click="ToggleButton_Click" Checked="ToggleButton_Checked"/>
                        <RepeatButton Content="Repeat button" Click="RepeatButton_Click" Interval="1000"/>
                        <TextBlock x:Name="tbCounter" Text="0"/>
                    </StackPanel>
                    <StackPanel Grid.Column="2" Margin="10">
                        <TextBlock Text="Input Controls:"/>
                        <TextBox Text="Enter username:"/>
                        <PasswordBox Password="Password"/>
                        <CheckBox IsChecked="True" Content="Is alive"/>
                        <RadioButton GroupName="Gender" IsChecked="True" Content="Male"/>
                        <RadioButton GroupName="Gender" Content="Female"/>
                        <ComboBox SelectedIndex="0">
                            <ComboBoxItem Content="First"/>
                            <ComboBoxItem Content="Second"/>
                            <ComboBoxItem Content="Third"/>
                        </ComboBox>
                        <Calendar DisplayDate="2001-12-24"/>
                        <DatePicker SelectedDate="2024-3-12"/>
                        <Slider Minimum="0" Maximum="100" Value="50"/>
                    </StackPanel>
                    <StackPanel Grid.Column="3">
                        <TextBlock Text="Media Controls:"/>
                        <Image Source="Media/Bitmap1.bmp"/>
                        <!--<MediaElement x:Name="meSpongebob"  Source="C:\Users\User\source\repos\WpfOverview\Media\spongebob.mp4" Width="100" Height="100" LoadedBehavior="Play" Volume="1"/>-->
                        <Button Content="Replay!" Click="Button_Click_1"/>
                    </StackPanel>
                    <StackPanel Grid.Column="4">
                        <TextBlock Text="Container Controls:"/>
                        <Border>
                            <Border.BorderThickness>2</Border.BorderThickness>
                            <Border.BorderBrush>
                                <SolidColorBrush Color="Red"/>
                            </Border.BorderBrush>
                            <TextBlock>
                                <TextBlock.Text>Bordered text!</TextBlock.Text>
                            </TextBlock>
                        </Border>
                        <TabControl>
                            <TabItem Header="First" IsSelected="True">
                                <TabItem.Content>
                                    <StackPanel>
                                        <TextBlock>First</TextBlock>
                                        <TextBlock>Second</TextBlock>
                                    </StackPanel>
                                </TabItem.Content>
                            </TabItem>
                            <TabItem Header="Second">
                                <TabItem.Content>
                                    <StackPanel>
                                        <TextBlock>Third</TextBlock>
                                        <TextBlock>Fourth</TextBlock>
                                    </StackPanel>
                                </TabItem.Content>
                            </TabItem>
                        </TabControl>
                        <Expander Header="Click to expand" Height="100" IsExpanded="False">
                            <Grid Background="#FFE5E5E5">
                                <Button Background="PeachPuff">Hi</Button>
                            </Grid>
                        </Expander>
                        <GroupBox Header="Gender">
                            <StackPanel>
                                <RadioButton Content="Male"/>
                                <RadioButton Content="Female"/>
                                <RadioButton Content="Other"/>
                            </StackPanel>
                        </GroupBox>
                    </StackPanel>
                </Grid>
            </TabItem>
            <TabItem Header="Panels:">
                <StackPanel>
                    <Canvas HorizontalAlignment="Stretch" Height="75">
                        <Button Canvas.Top="50" Canvas.Left="50">Button in canvas.</Button>
                    </Canvas>
                    <TextBlock>Docking:</TextBlock>
                    <DockPanel>
                        <Button DockPanel.Dock="Top">4 dock</Button>
                        <Button DockPanel.Dock="Bottom">1 dock</Button>
                        <Button DockPanel.Dock="Left">3 dock</Button>
                        <Button DockPanel.Dock="Right">2 dock</Button>
                        <Button>5 dock</Button>
                    </DockPanel>
                    <TextBlock>Wrap:</TextBlock>
                    <WrapPanel Orientation="Vertical" Height="59">
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                        <TextBlock>Hi</TextBlock>
                    </WrapPanel>
                </StackPanel>
            </TabItem>
            <TabItem Header="Data:">
                <StackPanel x:Name="spData">
                    <StackPanel.Resources>
                        <SolidColorBrush x:Key="rColor">
                            <SolidColorBrush.Color>Teal</SolidColorBrush.Color>
                        </SolidColorBrush>
                        <SolidColorBrush x:Key="drColor" Color="Red"/>
                    </StackPanel.Resources>
                    <TextBlock>Resources:</TextBlock>
                    <TextBlock Foreground="{StaticResource rColor}">Text color is from static resource</TextBlock>
                    <TextBlock Foreground="{DynamicResource drColor}">Text color is from dynamic resource, changes based on checkbox</TextBlock>
                    <CheckBox IsChecked="False" IsThreeState="False" Content="Checked - Blue, Unchecked - Red" Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked"/>
                    <TextBlock>DataContext Data Binding:</TextBlock>
                    <TextBox Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBox Text="{Binding LastName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="{Binding FullName, Mode=OneWay}"/>
                    <TextBlock Text="Element Data Binding:"/>
                    <TextBlock Text="{Binding ElementName=spData, Path=Children.Count}"/>
                    <TextBlock Text="Relative Element Data Binding:"/>
                    <Label>
                        <WrapPanel>
                            <TextBlock>My width: </TextBlock>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource Self}, Path=ActualWidth}"/>
                        </WrapPanel>
                    </Label>
                    <Label>
                        <WrapPanel>
                            <TextBlock>Window width:</TextBlock>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:MainWindow}, AncestorLevel=1}, Path=ActualWidth}"/>
                        </WrapPanel>
                    </Label>
                </StackPanel>
            </TabItem>
            <TabItem Header="Designing:">
                <StackPanel>
                    <StackPanel.Resources>
                        <Style TargetType="Button" x:Key="rBtnHover">
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Trigger.Setters>
                                        <Setter Property="FontWeight" Value="ExtraBold"/>
                                    </Trigger.Setters>
                                </Trigger>
                                <DataTrigger Binding="{Binding ElementName=cbRedText, Path=IsChecked}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Resources>
                    <TextBlock Text="Style:"/>
                    <Button Content="Button with thick border">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BorderThickness" Value="5"/>
                                <Setter Property="BorderBrush" Value="Teal"/>
                                <Setter Property="Padding" Value="10"/>
                            </Style>
                        </Button.Style>
                    </Button>
                    <TextBlock Text="Trigger:"/>
                    <Button Content="Text bold on hover." Style="{StaticResource rBtnHover}"/>
                    <CheckBox x:Name="cbRedText" IsChecked="False" Content="Text red on checked"/>
                    <TextBlock Text="Transforms:"/>
                    <Rectangle Width="100" Height="20" HorizontalAlignment="Left">
                        <Rectangle.Fill>
                            <SolidColorBrush Color="Red" Opacity="0.5"/>
                        </Rectangle.Fill>
                        <Rectangle.RenderTransform>
                            <ScaleTransform ScaleX="3" ScaleY="3"/>
                        </Rectangle.RenderTransform>
                    </Rectangle>
                    <Rectangle Width="100" Height="20" Fill="Aqua" HorizontalAlignment="Left">
                        <Rectangle.LayoutTransform>
                            <ScaleTransform ScaleX="2" ScaleY="2"/>
                        </Rectangle.LayoutTransform>
                    </Rectangle>
                    <TextBlock Text="Events:"/>
                    <Button Content="Right click for event messages" MouseDown="Button_MouseDown"/>
                    <TextBlock Text="Animations:"/>
                    <Button MinWidth="200" Content="Click to increase width" HorizontalAlignment="Left">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Background" Value="Orange"/>
                                <Setter Property="Padding" Value="0 10 5 15"/>

                                <Style.Triggers>
                                    <EventTrigger RoutedEvent="Click">
                                        <EventTrigger.Actions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation Duration="0:0:1" From="200" To="400" Storyboard.TargetProperty="(Button.MinWidth)"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </EventTrigger.Actions>
                                    </EventTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <Ellipse Width="50" Height="50" StrokeThickness="5" Stroke="Red" StrokeDashArray="1">
                        <Ellipse.RenderTransform>
                            <RotateTransform Angle="0" CenterX="25" CenterY="25"/>
                        </Ellipse.RenderTransform>
                        <Ellipse.Triggers>
                            <EventTrigger RoutedEvent="Loaded">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation From="0" To="360" Duration="0:0:3" RepeatBehavior="Forever" Storyboard.TargetProperty="(Rectangle.RenderTransform).(RotateTransform.Angle)"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </Ellipse.Triggers>
                    </Ellipse>
                </StackPanel>
            </TabItem>
            <TabItem Header="Property:">
                <StackPanel>
                    <TextBlock Text="Dependency Property:"/>
                    <TextBox Text="{Binding ElementName=wMain, Path=MyProperty, UpdateSourceTrigger=PropertyChanged}"/>
                    <TextBlock Text="{Binding ElementName=wMain, Path=MyProperty}"/>
                </StackPanel>
            </TabItem>
        </TabControl>
    </StackPanel>
</Window>
